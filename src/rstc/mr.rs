# [doc = "Register `MR` reader"] pub struct R (crate :: R < MR_SPEC >) ; impl core :: ops :: Deref for R { type Target = crate :: R < MR_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl From < crate :: R < MR_SPEC > > for R { # [inline (always)] fn from (reader : crate :: R < MR_SPEC >) -> Self { R (reader) } } # [doc = "Register `MR` writer"] pub struct W (crate :: W < MR_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < MR_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < MR_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < MR_SPEC >) -> Self { W (writer) } } # [doc = "Field `ERSTL` reader - External Reset Length"] pub type ERSTL_R = crate :: FieldReader < u8 , u8 > ; # [doc = "Field `ERSTL` writer - External Reset Length"] pub type ERSTL_W < 'a , const O : u8 > = crate :: FieldWriter < 'a , u32 , MR_SPEC , u8 , u8 , 4 , O > ; # [doc = "Field `KEY` reader - Password"] pub type KEY_R = crate :: FieldReader < u8 , u8 > ; # [doc = "Field `KEY` writer - Password"] pub type KEY_W < 'a , const O : u8 > = crate :: FieldWriter < 'a , u32 , MR_SPEC , u8 , u8 , 8 , O > ; impl R { # [doc = "Bits 8:11 - External Reset Length"] # [inline (always)] pub fn erstl (& self) -> ERSTL_R { ERSTL_R :: new (((self . bits >> 8) & 0x0f) as u8) } # [doc = "Bits 24:31 - Password"] # [inline (always)] pub fn key (& self) -> KEY_R { KEY_R :: new (((self . bits >> 24) & 0xff) as u8) } } impl W { # [doc = "Bits 8:11 - External Reset Length"] # [inline (always)] pub fn erstl (& mut self) -> ERSTL_W < 8 > { ERSTL_W :: new (self) } # [doc = "Bits 24:31 - Password"] # [inline (always)] pub fn key (& mut self) -> KEY_W < 24 > { KEY_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "Mode Register\n\nThis register you can [`read`](crate::generic::Reg::read), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [mr](index.html) module"] pub struct MR_SPEC ; impl crate :: RegisterSpec for MR_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [mr::R](R) reader structure"] impl crate :: Readable for MR_SPEC { type Reader = R ; } # [doc = "`write(|w| ..)` method takes [mr::W](W) writer structure"] impl crate :: Writable for MR_SPEC { type Writer = W ; }