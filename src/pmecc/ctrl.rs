# [doc = "Register `CTRL` writer"] pub struct W (crate :: W < CTRL_SPEC >) ; impl core :: ops :: Deref for W { type Target = crate :: W < CTRL_SPEC > ; # [inline (always)] fn deref (& self) -> & Self :: Target { & self . 0 } } impl core :: ops :: DerefMut for W { # [inline (always)] fn deref_mut (& mut self) -> & mut Self :: Target { & mut self . 0 } } impl From < crate :: W < CTRL_SPEC > > for W { # [inline (always)] fn from (writer : crate :: W < CTRL_SPEC >) -> Self { W (writer) } } # [doc = "Field `RST` writer - Reset the PMECC Module"] pub type RST_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , CTRL_SPEC , bool , O > ; # [doc = "Field `DATA` writer - Start a Data Phase"] pub type DATA_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , CTRL_SPEC , bool , O > ; # [doc = "Field `USER` writer - Start a User Mode Phase"] pub type USER_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , CTRL_SPEC , bool , O > ; # [doc = "Field `ENABLE` writer - PMECC Module Enable"] pub type ENABLE_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , CTRL_SPEC , bool , O > ; # [doc = "Field `DISABLE` writer - PMECC Module Disable"] pub type DISABLE_W < 'a , const O : u8 > = crate :: BitWriter < 'a , u32 , CTRL_SPEC , bool , O > ; impl W { # [doc = "Bit 0 - Reset the PMECC Module"] # [inline (always)] pub fn rst (& mut self) -> RST_W < 0 > { RST_W :: new (self) } # [doc = "Bit 1 - Start a Data Phase"] # [inline (always)] pub fn data (& mut self) -> DATA_W < 1 > { DATA_W :: new (self) } # [doc = "Bit 2 - Start a User Mode Phase"] # [inline (always)] pub fn user (& mut self) -> USER_W < 2 > { USER_W :: new (self) } # [doc = "Bit 4 - PMECC Module Enable"] # [inline (always)] pub fn enable (& mut self) -> ENABLE_W < 4 > { ENABLE_W :: new (self) } # [doc = "Bit 5 - PMECC Module Disable"] # [inline (always)] pub fn disable (& mut self) -> DISABLE_W < 5 > { DISABLE_W :: new (self) } # [doc = "Writes raw bits to the register."] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . 0 . bits (bits) ; self } } # [doc = "PMECC Control Register\n\nThis register you can [`write_with_zero`](crate::generic::Reg::write_with_zero), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [ctrl](index.html) module"] pub struct CTRL_SPEC ; impl crate :: RegisterSpec for CTRL_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [ctrl::W](W) writer structure"] impl crate :: Writable for CTRL_SPEC { type Writer = W ; } # [doc = "`reset()` method sets CTRL to value 0"] impl crate :: Resettable for CTRL_SPEC { # [inline (always)] fn reset_value () -> Self :: Ux { 0 } }